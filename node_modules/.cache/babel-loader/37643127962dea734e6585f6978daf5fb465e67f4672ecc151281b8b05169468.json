{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\Web Development Login Pages\\\\E-Commerce\\\\login-signup\\\\src\\\\Components\\\\ResetPassword\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ResetPassword.css';\nimport email_icon from '../Assets/email.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleReset = async () => {\n    if (!email) {\n      setError('Email is required');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:9090/freshers/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setMessage('Password reset link has been sent to your email.');\n        setError('');\n      } else {\n        setError('Error sending reset link. Please check your email.');\n      }\n    } catch (err) {\n      console.error('Error resetting password:', err);\n      setError('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `input ${error ? 'error' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: email_icon,\n        alt: \"Email Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email *\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n          setError('');\n          setMessage('');\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"+oC6IIAeBPUO7WCSW4CSxdFqDlU=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","email_icon","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","message","setMessage","error","setError","handleReset","response","fetch","method","headers","body","JSON","stringify","ok","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Downloads/Web Development Login Pages/E-Commerce/login-signup/src/Components/ResetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ResetPassword.css';\r\nimport email_icon from '../Assets/email.png';\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleReset = async () => {\r\n    if (!email) {\r\n      setError('Email is required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:9090/freshers/reset-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage('Password reset link has been sent to your email.');\r\n        setError('');\r\n      } else {\r\n        setError('Error sending reset link. Please check your email.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error resetting password:', err);\r\n      setError('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-container\">\r\n      <h2>Reset Password</h2>\r\n      <div className={`input ${error ? 'error' : ''}`}>\r\n        <img src={email_icon} alt=\"Email Icon\" />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter your email *\"\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n            setError('');\r\n            setMessage('');\r\n          }}\r\n          required\r\n        />\r\n      </div>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {message && <div className=\"success-message\">{message}</div>}\r\n\r\n      <div className=\"submit-container\">\r\n        <button onClick={handleReset}>Send Reset Link</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}